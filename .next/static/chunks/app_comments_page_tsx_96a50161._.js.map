{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/divya/OneDrive/Desktop/Developers/hackernews-frontend-final/app/comments/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useEffect, useState,useCallback } from \"react\";\r\n\r\ninterface Comment {\r\n  id: string;\r\n  content: string;\r\n  createdAt: string;\r\n  user: {\r\n    id: string;\r\n    name: string;\r\n  };\r\n  post: {\r\n    id: string;\r\n    title: string;\r\n  };\r\n}\r\n\r\nexport default function AllCommentsPage() {\r\n  const [comments, setComments] = useState<Comment[]>([]);\r\n  const [page, setPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [loading, setLoading] = useState(false);\r\n  const API_BASE = process.env.NEXT_PUBLIC_API_BASE_URL;\r\n\r\n  const fetchComments =useCallback( async (currentPage: number) => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await fetch(\r\n        `${API_BASE}/comments/all?page=${currentPage}&limit=5`,\r\n        {\r\n          credentials: \"include\",\r\n        }\r\n      );\r\n      const data = await res.json();\r\n\r\n      if (res.ok) {\r\n        const cleanedComments: Comment[] = (data.data ?? []).filter((c: unknown): c is Comment => {\r\n          if (\r\n            typeof c === \"object\" &&\r\n            c !== null &&\r\n            \"id\" in c &&\r\n            \"content\" in c &&\r\n            \"createdAt\" in c &&\r\n            \"user\" in c &&\r\n            \"post\" in c\r\n          ) {\r\n            return true;\r\n          }\r\n          return false;\r\n        })\r\n\r\n        setComments((prev) => {\r\n          const newComments = cleanedComments.filter((newComment) => {\r\n            return !prev.some((existing) => existing.id === newComment.id);\r\n          });\r\n          return [...prev, ...newComments];\r\n        });\r\n\r\n        setTotalPages(data.pagination.totalPages);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch comments:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  },[API_BASE]);\r\n\r\n  useEffect(() => {\r\n    fetchComments(page);\r\n  }, [fetchComments,page]);\r\n\r\n  return (\r\n    <div className=\"bg-[#f6f6ef] min-h-screen pt-20 px-4 text-[13px] text-black max-w-2xl mx-auto\">\r\n      <h1 className=\"text-orange-600 text-[18px] font-bold mb-6 text-center\">All Comments</h1>\r\n  \r\n      {loading && comments.length === 0 ? (\r\n        <div className=\"text-center text-gray-500\">Loading comments...</div>\r\n      ) : comments.length === 0 ? (\r\n        <p className=\"text-gray-500 text-center\">No comments available.</p>\r\n      ) : (\r\n        <ul className=\"space-y-4\">\r\n          {comments.map((comment, index) => {\r\n            if (!comment.id) return null;\r\n  \r\n            return (\r\n              <li\r\n                key={comment.id}\r\n                className=\"bg-white rounded-2xl px-4 py-3 shadow-md border-l-4 border-[#b3d4fc] flex justify-between\"\r\n              >\r\n                <div className=\"flex-1\">\r\n                  <div className=\"text-[14px] font-semibold text-pink-600 mb-1\">\r\n                    {index + 1}. {comment.user?.name ?? \"Anonymous\"}\r\n                  </div>\r\n                  <p className=\"text-gray-800 mb-1\">{comment.content}</p>\r\n                  <div className=\"text-[12px] text-gray-600\">\r\n                    on post:{\" \"}\r\n                    <span className=\"text-blue-600 italic hover:underline cursor-pointer\">\r\n                      {comment.post?.title ?? \"Unknown Post\"}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-[11px] text-gray-500 whitespace-nowrap ml-4\">\r\n                  {new Date(comment.createdAt).toLocaleTimeString()}\r\n                </div>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n  \r\n      {page < totalPages && !loading && (\r\n        <div className=\"mt-8 flex justify-center\">\r\n          <button\r\n            onClick={() => setPage((prev) => prev + 1)}\r\n            className=\"text-white bg-gradient-to-r from-cyan-500 to-blue-500 hover:bg-gradient-to-bl focus:ring-4 focus:outline-none focus:ring-cyan-300 dark:focus:ring-cyan-800 font-medium rounded-lg text-sm px-5 py-2.5 text-center me-2 mb-2 disabled:opacity-50\"\r\n            disabled={loading}\r\n          >\r\n            {loading ? \"Loading...\" : \"More\"}\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\n\r\n"],"names":[],"mappings":";;;AAuBmB;;AArBnB;;;AAFA;;AAkBe,SAAS;;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAa,EAAE;IACtD,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM;IAEN,MAAM,gBAAe,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;sDAAG,OAAO;YACvC,WAAW;YACX,IAAI;gBACF,MAAM,MAAM,MAAM,MAChB,GAAG,SAAS,mBAAmB,EAAE,YAAY,QAAQ,CAAC,EACtD;oBACE,aAAa;gBACf;gBAEF,MAAM,OAAO,MAAM,IAAI,IAAI;gBAE3B,IAAI,IAAI,EAAE,EAAE;oBACV,MAAM,kBAA6B,CAAC,KAAK,IAAI,IAAI,EAAE,EAAE,MAAM;sFAAC,CAAC;4BAC3D,IACE,OAAO,MAAM,YACb,MAAM,QACN,QAAQ,KACR,aAAa,KACb,eAAe,KACf,UAAU,KACV,UAAU,GACV;gCACA,OAAO;4BACT;4BACA,OAAO;wBACT;;oBAEA;sEAAY,CAAC;4BACX,MAAM,cAAc,gBAAgB,MAAM;0FAAC,CAAC;oCAC1C,OAAO,CAAC,KAAK,IAAI;kGAAC,CAAC,WAAa,SAAS,EAAE,KAAK,WAAW,EAAE;;gCAC/D;;4BACA,OAAO;mCAAI;mCAAS;6BAAY;wBAClC;;oBAEA,cAAc,KAAK,UAAU,CAAC,UAAU;gBAC1C;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,6BAA6B;YAC7C,SAAU;gBACR,WAAW;YACb;QACF;qDAAE;QAAC;KAAS;IAEZ,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR,cAAc;QAChB;oCAAG;QAAC;QAAc;KAAK;IAEvB,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAAyD;;;;;;YAEtE,WAAW,SAAS,MAAM,KAAK,kBAC9B,6LAAC;gBAAI,WAAU;0BAA4B;;;;;uBACzC,SAAS,MAAM,KAAK,kBACtB,6LAAC;gBAAE,WAAU;0BAA4B;;;;;qCAEzC,6LAAC;gBAAG,WAAU;0BACX,SAAS,GAAG,CAAC,CAAC,SAAS;oBACtB,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO;oBAExB,qBACE,6LAAC;wBAEC,WAAU;;0CAEV,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAI,WAAU;;4CACZ,QAAQ;4CAAE;4CAAG,QAAQ,IAAI,EAAE,QAAQ;;;;;;;kDAEtC,6LAAC;wCAAE,WAAU;kDAAsB,QAAQ,OAAO;;;;;;kDAClD,6LAAC;wCAAI,WAAU;;4CAA4B;4CAChC;0DACT,6LAAC;gDAAK,WAAU;0DACb,QAAQ,IAAI,EAAE,SAAS;;;;;;;;;;;;;;;;;;0CAI9B,6LAAC;gCAAI,WAAU;0CACZ,IAAI,KAAK,QAAQ,SAAS,EAAE,kBAAkB;;;;;;;uBAhB5C,QAAQ,EAAE;;;;;gBAoBrB;;;;;;YAIH,OAAO,cAAc,CAAC,yBACrB,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBACC,SAAS,IAAM,QAAQ,CAAC,OAAS,OAAO;oBACxC,WAAU;oBACV,UAAU;8BAET,UAAU,eAAe;;;;;;;;;;;;;;;;;AAOtC;GA3GwB;KAAA","debugId":null}}]
}